apiVersion: v1
kind: BuildConfig
metadata:
  labels:
    app: ola
    name: ola-app-pipeline
  name: ola-app-pipeline
spec:
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        node('maven') {

            stage('Build') {
                echo "Welcome to Build Stage for Sample Ola app"

                echo 'Cloning ola app repo'
                    git branch: 'master',
                        url: 'http://gitea.apps.openshift.pub/ageslabs/ola.git'

                version = "${env.BUILD_NUMBER}"
                echo 'Defined build version: ${version}'

                echo 'Creating ola app image'
                    // Build ola image
                    is_ola_built = sh (returnStdout: true, script: "oc get is ola --no-headers=true -n lab-dev | awk '{print \$1}'").trim()
                    if (is_ola_built != "ola") {
                        echo "Building ola on redhat-dev, using Source2Image strategy"
                        sh "oc new-build . --strategy=source --image-stream=openshift/redhat-openjdk18-openshift:1.2 --build-env='MAVEN_MIRROR_URL=http://nexus-devops-tools.apps.openshift.pub/maven-public' --name ola --labels=app=ola -n lab-dev"
                        sh "oc cancel-build bc/ola -n lab-dev"
                        sh "oc start-build ola --from-dir=. --wait=true -n lab-dev"
                        sh "oc tag lab-dev/ola:latest lab-dev/ola:${version}"
                    } else {
                        echo "ola image already created, updating it"
                        sh "oc start-build ola --from-dir=. --wait=true -n lab-dev"
                        sh "oc tag lab-dev/ola:latest lab-dev/ola:${version}"
                    }

                echo 'Deploying ola service, version: ${version}'
                    is_ola_deployed = sh (returnStdout: true, script: "oc get svc ola --no-headers=true -n lab-dev | awk '{print \$1}'").trim()
                    if (is_ola_deployed != "ola") {
                        echo "Deploying ola, using the previously created image"
                        sh "oc new-app lab-dev/ola:${version} -n lab-dev"
                        sh "oc expose svc ola -n lab-dev"
                    } else {
                        echo "ola service is already deployed. . New deployment is triggered automatically when image change"
                    }
            } //End of Build Stage

            stage('Test') {
                echo "Welcome to Test Stage for ola app"

                echo 'Deploying ola service on test environment'
                    is_ola_deployed = sh (returnStdout: true, script: "oc get svc ola --no-headers=true -n lab-test | awk '{print \$1}'").trim()
                    if (is_ola_deployed != "ola") {
                        echo "Deploying ola, using the previously created image"
                        sh "oc tag lab-dev/ola:${version} lab-test/ola:${version}"
                        sh "oc new-app lab-test/ola:${version} -n lab-test"
                        sh "oc expose svc ola -n lab-test"
                    } else {
                        echo "ola service is already deployed. New deployment is triggered automatically when image change"
                        sh "oc tag lab-dev/ola:${version} lab-test/ola:${version}"
                    }

            } // End of test stage

            stage('Production') {
                input message: "Promote to Production stage?", ok: "Promote"

                echo "Welcome to Production Stage for ola app"

                echo 'Deploying ola service'
                    is_ola_deployed = sh (returnStdout: true, script: "oc get svc ola --no-headers=true -n lab-prod | awk '{print \$1}'").trim()
                    if (is_ola_deployed != "ola") {
                        echo "Deploying ola, using the previously created image"
                        sh "oc tag lab-test/ola:${version} lab-prod/ola:${version}"
                        sh "oc new-app lab-prod/ola:${version} -n lab-prod"
                        sh "oc expose svc ola -n lab-prod"
                    } else {
                        echo "ola service is already deployed. . New deployment is triggered automatically when image change"
                        sh "oc tag lab-test/ola:${version} lab-prod/ola:${version}"
                    }
            } // End of prod stage
        }
